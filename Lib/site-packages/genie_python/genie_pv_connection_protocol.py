from typing import Protocol, runtime_checkable, Tuple, TypeAlias
from collections.abc import Callable
from numpy.typing import NDArray

PVBaseValue: TypeAlias = bool | int | float | str
PVValue: TypeAlias = PVBaseValue | list[PVBaseValue] | NDArray | None
@runtime_checkable
class GeniePvConnectionProtocol(Protocol):

    @staticmethod
    def set_pv_value(name: str, value: PVValue, wait: bool, timeout: float,
                     safe_not_quick: bool) -> None:
        pass

    @staticmethod
    def clear_monitor(name: str, timeout: float) -> None:
        pass

    @staticmethod
    def get_pv_value(name: str, to_string: bool, timeout: float,
                     use_numpy: bool | None) -> PVValue:
        pass

    @staticmethod
    def get_pv_timestamp(name: str, timeout: float) -> Tuple[int, int]:
        pass

    @staticmethod
    def pv_exists(name: str, timeout: float) -> bool:
        pass

    @staticmethod
    def add_monitor(name: str, call_back_function: Callable[[any, any, any], None],
                    link_alarm_on_disconnect: bool,
                    to_string: bool, use_numpy: bool | None) -> Callable[[], None]:
        pass






